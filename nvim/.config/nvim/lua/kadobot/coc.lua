local a = vim.api

a.nvim_set_keymap("n", "gx", "<Plug>(coc-codeaction-line)", {})
a.nvim_set_keymap("n", "gX", "<Plug>(coc-codeaction)", {})
a.nvim_set_keymap("n", "gc", "<Plug>(coc-codelens-action)", {})
a.nvim_set_keymap("n", "gn", "<Plug>(coc-diagnostic-next)", {})
a.nvim_set_keymap("n", "gp", "<Plug>(coc-diagnostic-prev)", {})
a.nvim_set_keymap("n", "gz", "<Plug>(coc-refactor)", {})
a.nvim_set_keymap("n", "ge", ":CocCommand eslint.executeAutofix<CR>", {})
a.nvim_set_keymap("n", "gd", "<Plug>(coc-definition)", {silent = true})
a.nvim_set_keymap("n", "K", ":call CocActionAsync('doHover')<CR>", {silent = true, noremap = true})
a.nvim_set_keymap("n", "gr", "<Plug>(coc-rename)", {})
a.nvim_set_keymap("n", "gf", ":CocCommand prettier.formatFile<CR>", {noremap = true})
a.nvim_set_keymap("i", "<C-s>", "coc#refresh()", { silent = true, expr = true })
a.nvim_set_keymap("i", "<TAB>", "pumvisible() ? '<C-n>' : '<TAB>'", {noremap = true, silent = true, expr = true})
a.nvim_set_keymap("i", "<S-TAB>", "pumvisible() ? '<C-p>' : '<C-h>'", {noremap = true, expr = true})
a.nvim_set_keymap("i", "<CR>", "pumvisible() ? coc#_select_confirm() : '<C-G>u<CR><C-R>=coc#on_enter()<CR>'", {silent = true, expr = true, noremap = true})
